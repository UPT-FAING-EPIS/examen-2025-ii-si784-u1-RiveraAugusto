name: 'Infraestructura de Base de Datos con Terraform'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # ------ JOB PARA INFRACOST ------
  infracost:
    name: 'Análisis de Costos con Infracost'
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}
      - name: Run Infracost and Comment
        uses: infracost/actions/comment@v2
        with:
          path: ./terraform
          behavior: update

  # ------ JOB PARA APLICAR CAMBIOS CON TERRAFORM ------
  terraform-apply:
    name: 'Apply Terraform'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Google Auth
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        run: terraform init
      - name: Terraform Apply
        run: |
          if ! terraform apply -auto-approve -no-color &> terraform_output.log; then
            echo "Terraform apply falló. Verificando si el error es porque la instancia ya existe..."
            if grep -q "instanceAlreadyExists" terraform_output.log; then
              echo "Error aceptable: La instancia ya existe. El workflow continuará."
              exit 0
            else
              echo "Error crítico de Terraform. El workflow se detendrá."
              cat terraform_output.log
              exit 1
            fi
          fi
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}